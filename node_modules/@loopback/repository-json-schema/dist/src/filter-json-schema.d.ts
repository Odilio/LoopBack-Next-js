import { Model } from '@loopback/repository';
import { JSONSchema6 as JsonSchema } from 'json-schema';
/**
 * Build a JSON schema describing the format of the "filter" object
 * used to query model instances.
 *
 * Note we don't take the model properties into account yet and return
 * a generic json schema allowing any "where" condition.
 *
 * @param modelCtor The model constructor to build the filter schema for.
 */
export declare function getFilterJsonSchemaFor(modelCtor: typeof Model): JsonSchema;
/**
 * Build a JSON schema describing the format of the "where" object
 * used to filter model instances to query, update or delete.
 *
 * Note we don't take the model properties into account yet and return
 * a generic json schema allowing any "where" condition.
 *
 * @param modelCtor The model constructor to build the filter schema for.
 */
export declare function getWhereJsonSchemaFor(modelCtor: typeof Model): JsonSchema;
/**
 * Build a JSON schema describing the format of the "fields" object
 * used to include or exclude properties of model instances.
 *
 * @param modelCtor The model constructor to build the filter schema for.
 */
export declare function getFieldsJsonSchemaFor(modelCtor: typeof Model): JsonSchema;
